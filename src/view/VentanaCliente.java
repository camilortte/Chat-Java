/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.net.SocketException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;
import model.Cliente;
import model.ConexionFTP;
import model.Servidor;

/**
 *
 * @author camilortte
 */
public class VentanaCliente extends javax.swing.JFrame {

    
    private int puerto;
    private String host;
    private Cliente cliente;
    private String nickname;
    private File archivo = null;
    
    public VentanaCliente() {
        initComponents();
        puerto=7000;
        host="127.0.0.1";
        this.setLocationRelativeTo(null);
        cliente=null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_usuariosConectados = new javax.swing.JList();
        jTextField_salida = new javax.swing.JTextField();
        jButton_enviar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textPanelEdit_texto = new view.TextPanelEdit();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_conectar = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem_desconectar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cliente");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Usuarios Conectados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 51, 255)));

        jList_usuariosConectados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList_usuariosConectadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList_usuariosConectados);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTextField_salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_salidaActionPerformed(evt);
            }
        });
        jTextField_salida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_salidaKeyReleased(evt);
            }
        });

        jButton_enviar.setText("Enviar");
        jButton_enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_enviarActionPerformed(evt);
            }
        });

        textPanelEdit_texto.setFont(new java.awt.Font("Liberation Mono", 1, 14)); // NOI18N
        jScrollPane3.setViewportView(textPanelEdit_texto);

        jButton1.setText("Subir Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Guardar historial");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Salir");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Coneccion");

        jMenuItem_conectar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_conectar.setText("Conectar");
        jMenuItem_conectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_conectarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_conectar);

        jMenuItem5.setText("Cambiar Configuracion");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem_desconectar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_desconectar.setText("Cerrar Conexiones");
        jMenuItem_desconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_desconectarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_desconectar);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Acerca de");

        jMenuItem3.setText("Acerca de");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField_salida, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_enviar))
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                        .addGap(4, 4, 4)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_salida)
                            .addComponent(jButton_enviar, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                        .addGap(3, 3, 3)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton_enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_enviarActionPerformed
        enviar();
    }//GEN-LAST:event_jButton_enviarActionPerformed

    public int getPuerto() {
        return puerto;
    }

    public void setPuerto(int puerto) {
        this.puerto = puerto;
        if(cliente!=null){
            this.jMenuItem_desconectarActionPerformed(null);
            this.jMenuItem_conectarActionPerformed(null);
        }
    }

    
    
    
    private void enviar(){
        if(!jTextField_salida.getText().isEmpty()){
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm");
            Calendar cal = Calendar.getInstance();            
            //servidor.flujoSalida("SERVER("+dateFormat.format(cal.getTime())+")>> "+this.jTextField_salida.getText());            
            cliente.flujoSalida(1,this.jTextField_salida.getText());
            this.textPanelEdit_texto.append(Color.orange,"Yo("+dateFormat.format(cal.getTime())+")>> ");
            this.textPanelEdit_texto.append(Color.black,this.jTextField_salida.getText()+"\n");
            this.jTextField_salida.setText("");
        }
        this.jTextField_salida.requestFocus();
        
    }
    
    private void enviar(String nombre_archivo){
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm");
            Calendar cal = Calendar.getInstance();            
            //servidor.flujoSalida("SERVER("+dateFormat.format(cal.getTime())+")>> "+this.jTextField_salida.getText());            
            cliente.flujoSalida(4,nombre_archivo);
            this.textPanelEdit_texto.append(Color.orange,"Yo("+dateFormat.format(cal.getTime())+")>> ");
            this.textPanelEdit_texto.append(Color.black," subi el archivo "+nombre_archivo+"\n");            
        
        this.jTextField_salida.requestFocus();
        
    }
    
    private void jMenuItem_desconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_desconectarActionPerformed
        cliente.close();
    }//GEN-LAST:event_jMenuItem_desconectarActionPerformed

    private void jMenuItem_conectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_conectarActionPerformed
        nickname=JOptionPane.showInputDialog(this, "Antes de empezar: \nCual es tu nickname:");
        if(nickname!=null){
            cliente=new Cliente(puerto, host, nickname, this);            
            this.textPanelEdit_texto.append(Color.blue, "Creado Conexiones...\n");

            new Thread(){ public void run(){                    
                    try {
                        this.sleep(500);
                        textPanelEdit_texto.append(Color.blue, "Esperando conexiones en el puerto "+puerto+"...\n");
                        cliente.initClient();
                    } catch (InterruptedException ex) {
                        Logger.getLogger(VentanaCliente.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                }
            }.start();
            
        }       
    }//GEN-LAST:event_jMenuItem_conectarActionPerformed

    private void jTextField_salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_salidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_salidaActionPerformed

    private void jTextField_salidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_salidaKeyReleased
        if(evt.getKeyCode()==10){
           enviar();
        }
    }//GEN-LAST:event_jTextField_salidaKeyReleased

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        (new ConfiguracionCliente(this, true)).setVisible(true);
       /* if(cliente!=null){
            cliente.close();
            cliente=new Cliente(puerto, host, nickname, this);  
        }*/
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jList_usuariosConectadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList_usuariosConectadosMouseClicked
        System.out.println(jList_usuariosConectados.getSelectedIndex());
    }//GEN-LAST:event_jList_usuariosConectadosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser choice = new JFileChooser();
        int option = choice.showOpenDialog(this);        
        if (option == JFileChooser.APPROVE_OPTION) {
            archivo=choice.getSelectedFile();
        System.out.println("Es archivo: "+ archivo.exists());
        try {            
            ConexionFTP conexion=new ConexionFTP("1","1",host);
            if(!conexion.upFile(archivo)){
                JOptionPane.showMessageDialog(this, "No se pudo subir el archivo","Error",JOptionPane.ERROR_MESSAGE);
            }else{
                enviar(archivo.getName());
                JOptionPane.showMessageDialog(this, "El archivo "+archivo.getName()+" se subio satisfactoriamente","Error",JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (SocketException ex) {
            Logger.getLogger(VentanaCliente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        (new AcercaDe(this, false)).setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public void setPanelText(String texto, Color color){
        this.textPanelEdit_texto.append(color, texto);
    }
    
    public void setUsuarios(ArrayList<String> usuarios){
        if(usuarios!=null){
            System.out.println("Se modificara Cliente con "+usuarios.toString());
            DefaultListModel<String> modelo=new DefaultListModel<String>();
            for(String usuario:usuarios){
                modelo.addElement(usuario);
            }
            jList_usuariosConectados.setModel(modelo);
        }
    }

    public String getHost() {
        return host;
    }

    public void setHost(String host) {
        this.host = host;
    }
    
    
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCliente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_enviar;
    private javax.swing.JList jList_usuariosConectados;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem_conectar;
    private javax.swing.JMenuItem jMenuItem_desconectar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField_salida;
    private view.TextPanelEdit textPanelEdit_texto;
    // End of variables declaration//GEN-END:variables
}
